{"version":3,"file":"fetch-http-message.js","sources":["../../src/blobToString.ts","../../src/index.ts"],"sourcesContent":["// https://stackoverflow.com/a/23024613/3150390\n/* c8 ignore start */\nexport default function blobToString(b: Blob): string {\n  const u = URL.createObjectURL(b);\n  const x = new XMLHttpRequest();\n  x.open('GET', u, false);\n  x.send();\n  URL.revokeObjectURL(u);\n  return x.responseText;\n}\n/* c8 ignore stop */\n","// @ts-ignore\nimport blobToString from './blobToString.ts';\n\nexport interface HeadersObject {\n  [key: string]: string;\n}\n\n// https://github.com/node-fetch/node-fetch/blob/main/%40types/index.d.ts\nexport type HeadersInit = Headers | HeadersObject | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>;\nconst hasHeaders = typeof Headers !== 'undefined';\n\nexport type BodyInit = Blob | Buffer | URLSearchParams | string;\nconst hasBlob = typeof Blob !== 'undefined';\nconst hasBuffer = typeof Buffer !== 'undefined';\nconst hasURLSearchParams = typeof URLSearchParams !== 'undefined';\n\n// export type RequestRedirect = 'error' | 'follow' | 'manual';\nexport interface RequestInit {\n  body?: BodyInit | null;\n  headers?: HeadersInit;\n  method?: string;\n  // redirect?: RequestRedirect;\n}\n\nexport type RequestInfo = string | Request;\nexport interface Request {\n  readonly headers: Headers | HeadersObject;\n  readonly method: string;\n  // readonly redirect: RequestRedirect;\n  readonly url: string;\n}\n\nfunction isRequest(object) {\n  return typeof object === 'object';\n}\n\n/**\n * Generate an http message string using the fetch API\n *\n * @param input Fetch input\n * @param init Fetch init\n * @returns The http message string\n */\nexport default function fetchHttpMessage(input: RequestInfo, init?: RequestInit): string {\n  if (input === undefined) throw new Error('Input is expected');\n  if (init === undefined) init = {};\n\n  let url;\n  if (isRequest(input)) url = (input as Request).url;\n  else {\n    url = input as string;\n    input = {} as Request;\n  }\n\n  let method = init.method || (input as Request).method || 'GET';\n  method = method.toUpperCase();\n  const lines = [`${method} ${url} HTTP/1.1`];\n\n  const headers = init.headers || (input as Request).headers;\n  if (headers !== undefined) {\n    /* c8 ignore start */\n    if (hasHeaders && headers instanceof Headers) {\n      for (const pair of (headers as Headers).entries()) lines.push(`${pair[0]}: ${pair[1]}`);\n    } else {\n      /* c8 ignore stop */\n      for (const key in headers as HeadersObject) lines.push(`${key}: ${headers[key]}`);\n    }\n  }\n\n  const body = init.body;\n  if (body !== undefined) {\n    if (~['GET', 'HEAD'].indexOf(method)) throw new Error(`Option body not valid with method ${method}`);\n    /* c8 ignore start */\n    if (hasBlob && body instanceof Blob) {\n      lines.push('');\n      lines.push(blobToString(body));\n    } else if (\n      /* c8 ignore stop */\n      typeof body === 'string' ||\n      body instanceof String ||\n      /* c8 ignore start */\n      (hasBuffer && body instanceof Buffer) ||\n      (hasURLSearchParams && body instanceof URLSearchParams)\n      /* c8 ignore stop */\n    ) {\n      lines.push('');\n      lines.push(body.toString());\n    } else throw new Error('Option body should be convertible to a string');\n  }\n  return lines.join('\\r\\n');\n}\n"],"names":["blobToString","b","u","URL","createObjectURL","x","XMLHttpRequest","open","send","revokeObjectURL","responseText","hasHeaders","Headers","hasBlob","Blob","hasBuffer","Buffer","hasURLSearchParams","URLSearchParams","isRequest","object","fetchHttpMessage","input","init","undefined","Error","url","method","toUpperCase","lines","headers","entries","pair","push","key","body","indexOf","String","toString","join"],"mappings":"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"}