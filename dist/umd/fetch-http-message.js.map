{"version":3,"file":"fetch-http-message.js","sources":["../../src/blobToString.ts","../../src/index.ts"],"sourcesContent":["// https://stackoverflow.com/a/23024613/3150390\n/* c8 ignore start */\nexport default function blobToString(b: Blob): string {\n  const u = URL.createObjectURL(b);\n  const x = new XMLHttpRequest();\n  x.open(\"GET\", u, false);\n  x.send();\n  URL.revokeObjectURL(u);\n  return x.responseText;\n}\n/* c8 ignore stop */\n","import blobToString from \"./blobToString\";\n\nexport interface HeadersObject {\n  [key: string]: string;\n}\n\n// https://github.com/node-fetch/node-fetch/blob/main/%40types/index.d.ts\nexport type HeadersInit =\n  | Headers\n  | HeadersObject\n  | Record<string, string>\n  | Iterable<readonly [string, string]>\n  | Iterable<Iterable<string>>;\nconst hasHeaders = typeof Headers !== \"undefined\";\n\nexport type BodyInit = Blob | Buffer | URLSearchParams | string;\nconst hasBlob = typeof Blob !== \"undefined\";\nconst hasBuffer = typeof Buffer !== \"undefined\";\nconst hasURLSearchParams = typeof URLSearchParams !== \"undefined\";\n\n// export type RequestRedirect = 'error' | 'follow' | 'manual';\nexport interface RequestInit {\n  body?: BodyInit | null;\n  headers?: HeadersInit;\n  method?: string;\n  // redirect?: RequestRedirect;\n}\n\nexport type RequestInfo = string | Request;\nexport interface Request {\n  readonly headers: Headers | HeadersObject;\n  readonly method: string;\n  // readonly redirect: RequestRedirect;\n  readonly url: string;\n}\n\nfunction isRequest(object) {\n  return typeof object === \"object\";\n}\n\n/**\n * Generate an http message string using the fetch API\n *\n * @param input Fetch input\n * @param init Fetch init\n * @returns The http message string\n */\nexport default function fetchHttpMessage(input: RequestInfo, init?: RequestInit): string {\n  if (input === undefined) throw new Error(\"Input is expected\");\n  if (init === undefined) init = {};\n\n  let url;\n  if (isRequest(input)) url = (input as Request).url;\n  else {\n    url = input as string;\n    input = {} as Request;\n  }\n\n  let method = init.method || (input as Request).method || \"GET\";\n  method = method.toUpperCase();\n  const lines = [`${method} ${url} HTTP/1.1`];\n\n  const headers = init.headers || (input as Request).headers;\n  if (headers !== undefined) {\n    /* c8 ignore start */\n    if (hasHeaders && headers instanceof Headers) {\n      for (const pair of (headers as Headers).entries()) lines.push(`${pair[0]}: ${pair[1]}`);\n    } else {\n      /* c8 ignore stop */\n      for (const key in headers as HeadersObject) lines.push(`${key}: ${headers[key]}`);\n    }\n  }\n\n  const body = init.body;\n  if (body !== undefined) {\n    if (~[\"GET\", \"HEAD\"].indexOf(method)) throw new Error(`Option body not valid with method ${method}`);\n    /* c8 ignore start */\n    if (hasBlob && body instanceof Blob) {\n      lines.push(\"\");\n      lines.push(blobToString(body));\n    } else if (\n      /* c8 ignore stop */\n      typeof body === \"string\" ||\n      body instanceof String ||\n      /* c8 ignore start */\n      (hasBuffer && body instanceof Buffer) ||\n      (hasURLSearchParams && body instanceof URLSearchParams)\n      /* c8 ignore stop */\n    ) {\n      lines.push(\"\");\n      lines.push(body.toString());\n    } else throw new Error(\"Option body should be convertible to a string\");\n  }\n  return lines.join(\"\\r\\n\");\n}\n"],"names":["blobToString","b","u","URL","createObjectURL","x","XMLHttpRequest","open","send","revokeObjectURL","responseText","hasHeaders","Headers","hasBlob","Blob","hasBuffer","Buffer","hasURLSearchParams","URLSearchParams","isRequest","object","fetchHttpMessage","input","init","undefined","Error","url","method","toUpperCase","lines","headers","entries","pair","push","key","body","indexOf","String","toString","join"],"mappings":"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"}