{"version":3,"file":"fetch-http-message.min.js","sources":["../../src/index.ts","../../src/blobToString.ts"],"sourcesContent":["// @ts-ignore\nimport blobToString from './blobToString.ts';\n\nexport interface HeadersObject {\n  [key: string]: string;\n}\n\n// https://github.com/node-fetch/node-fetch/blob/main/%40types/index.d.ts\nexport type HeadersInit = Headers | HeadersObject | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>;\nconst hasHeaders = typeof Headers !== 'undefined';\n\nexport type BodyInit = Blob | Buffer | URLSearchParams | string;\nconst hasBlob = typeof Blob !== 'undefined';\nconst hasBuffer = typeof Buffer !== 'undefined';\nconst hasURLSearchParams = typeof URLSearchParams !== 'undefined';\n\n// export type RequestRedirect = 'error' | 'follow' | 'manual';\nexport interface RequestInit {\n  body?: BodyInit | null;\n  headers?: HeadersInit;\n  method?: string;\n  // redirect?: RequestRedirect;\n}\n\nexport type RequestInfo = string | Request;\nexport interface Request {\n  readonly headers: Headers | HeadersObject;\n  readonly method: string;\n  // readonly redirect: RequestRedirect;\n  readonly url: string;\n}\n\nfunction isRequest(object) {\n  return typeof object === 'object';\n}\n\n/**\n * Generate an http message string using the fetch API\n *\n * @param input Fetch input\n * @param init Fetch init\n * @returns The http message string\n */\nexport default function fetchHttpMessage(input: RequestInfo, init?: RequestInit): string {\n  if (input === undefined) throw new Error('Input is expected');\n  if (init === undefined) init = {};\n\n  let url: string;\n  if (isRequest(input)) url = (input as Request).url;\n  else {\n    url = input as string;\n    input = {} as Request;\n  }\n\n  let method = init.method || (input as Request).method || 'GET';\n  method = method.toUpperCase();\n  const lines = [`${method} ${url} HTTP/1.1`];\n\n  const headers = init.headers || (input as Request).headers;\n  if (headers !== undefined) {\n    /* c8 ignore start */\n    if (hasHeaders && headers instanceof Headers) {\n      for (const pair of (headers as Headers).entries()) lines.push(`${pair[0]}: ${pair[1]}`);\n    } else {\n      /* c8 ignore stop */\n      for (const key in headers as HeadersObject) lines.push(`${key}: ${headers[key]}`);\n    }\n  }\n\n  const body = init.body;\n  if (body !== undefined) {\n    if (~['GET', 'HEAD'].indexOf(method)) throw new Error(`Option body not valid with method ${method}`);\n    /* c8 ignore start */\n    if (hasBlob && body instanceof Blob) {\n      lines.push('');\n      lines.push(blobToString(body));\n    } else if (\n      /* c8 ignore stop */\n      typeof body === 'string' ||\n      body instanceof String ||\n      /* c8 ignore start */\n      (hasBuffer && body instanceof Buffer) ||\n      (hasURLSearchParams && body instanceof URLSearchParams)\n      /* c8 ignore stop */\n    ) {\n      lines.push('');\n      lines.push(body.toString());\n    } else throw new Error('Option body should be convertible to a string');\n  }\n  return lines.join('\\r\\n');\n}\n","// https://stackoverflow.com/a/23024613/3150390\n/* c8 ignore start */\nexport default function blobToString(b: Blob): string {\n  const u = URL.createObjectURL(b);\n  const x = new XMLHttpRequest();\n  x.open('GET', u, false);\n  x.send();\n  URL.revokeObjectURL(u);\n  return x.responseText;\n}\n/* c8 ignore stop */\n"],"names":["hasHeaders","Headers","hasBlob","Blob","hasBuffer","Buffer","hasURLSearchParams","URLSearchParams","input","init","undefined","Error","url","method","toUpperCase","lines","concat","headers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","next","done","pair","value","push","err","return","key","b","u","x","body","indexOf","URL","createObjectURL","XMLHttpRequest","open","send","revokeObjectURL","responseText","_instanceof","String","toString","join"],"mappings":"6WASA,IAAMA,EAAgC,oBAAZC,QAGpBC,EAA0B,oBAATC,KACjBC,EAA8B,oBAAXC,OACnBC,EAAgD,oBAApBC,uBA6BnB,SAA0BC,EAAoBC,GAC3D,QAAcC,IAAVF,EAAqB,MAAM,IAAIG,MAAM,qBAGzC,IAAIC,OAFSF,IAATD,IAAoBA,EAAO,IAZN,iBAeXD,EAAQI,EAAOJ,EAAkBI,KAE7CA,EAAMJ,EACNA,EAAQ,CAAA,GAGV,IAAIK,EAASJ,EAAKI,QAAUL,EAAmBK,QAAU,MACzDA,EAASA,EAAOC,cAChB,IAAMC,EAAQ,CAAE,GAAYH,OAAVC,EAAO,KAAOG,OAAJJ,EAAI,cAE1BK,EAAUR,EAAKQ,SAAYT,EAAkBS,QACnD,QAAgBP,IAAZO,EAEF,GAAIjB,GAAciB,EAAAA,EAAmBhB,SAAS,CACvC,IAAAiB,GAAA,EAAAC,GAAA,EAAAC,OAAAV,MAAL,IAAK,IAAAW,EAAAC,EAAcL,EAAqBM,+BAAnCL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAAA,CAAA,IAAMQ,EAANL,EAAAM,MAA8CZ,EAAMa,KAAK,GAAeF,OAAZA,EAAK,GAAG,MAAYV,OAARU,EAAK,eAA7EP,GAAA,EAAAC,EAAAS,cAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,iBAAA,GAAAX,EAAA,MAAAC,SAGL,IAAK,IAAMW,KAAOd,EAA0BF,EAAMa,KAAK,GAAWX,OAARc,EAAI,MAAiBf,OAAbC,EAAQc,KAI9E,ICnEmCC,EAC7BC,EACAC,EDiEAC,EAAO1B,EAAK0B,KAClB,QAAazB,IAATyB,EAAoB,CACtB,IAAK,CAAC,MAAO,QAAQC,QAAQvB,GAAS,MAAM,IAAIF,MAAO,qCAA2CK,OAAPH,IAE3F,GAAIX,GAAWiC,EAAAA,EAAgBhC,MAC7BY,EAAMa,KAAK,IACXb,EAAMa,MCzEyBI,EDyEPG,ECxEtBF,EAAII,IAAIC,gBAAgBN,IACxBE,EAAI,IAAIK,gBACZC,KAAK,MAAOP,GAAG,GACjBC,EAAEO,OACFJ,IAAIK,gBAAgBT,GACbC,EAAES,mBDoEA,MAEW,iBAATR,GACHS,EAAJT,EAAgBU,SAEfzC,GAAa+B,EAAAA,EAAgB9B,SAC7BC,GAA0BsC,EAAJT,EAAgB5B,kBAKlC,MAAM,IAAII,MAAM,iDAFrBI,EAAMa,KAAK,IACXb,EAAMa,KAAKO,EAAKW,WACK,CACzB,CACA,OAAO/B,EAAMgC,KAAK,OACpB"}