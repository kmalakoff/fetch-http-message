{"version":3,"sources":["index.ts"],"sourcesContent":["// @ts-ignore\nimport blobToString from './blobToString.ts';\n\nexport interface HeadersObject {\n  [key: string]: string;\n}\n\n// https://github.com/node-fetch/node-fetch/blob/main/%40types/index.d.ts\nexport type HeadersInit = Headers | HeadersObject | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>;\nconst hasHeaders = typeof Headers !== 'undefined';\n\nexport type BodyInit = Blob | Buffer | URLSearchParams | string;\nconst hasBlob = typeof Blob !== 'undefined';\nconst hasBuffer = typeof Buffer !== 'undefined';\nconst hasURLSearchParams = typeof URLSearchParams !== 'undefined';\n\n// export type RequestRedirect = 'error' | 'follow' | 'manual';\nexport interface RequestInit {\n  body?: BodyInit | null;\n  headers?: HeadersInit;\n  method?: string;\n  // redirect?: RequestRedirect;\n}\n\nexport type RequestInfo = string | Request;\nexport interface Request {\n  readonly headers: Headers | HeadersObject;\n  readonly method: string;\n  // readonly redirect: RequestRedirect;\n  readonly url: string;\n}\n\nfunction isRequest(object) {\n  return typeof object === 'object';\n}\n\n/**\n * Generate an http message string using the fetch API\n *\n * @param input Fetch input\n * @param init Fetch init\n * @returns The http message string\n */\nexport default function fetchHttpMessage(input: RequestInfo, init?: RequestInit): string {\n  if (input === undefined) throw new Error('Input is expected');\n  if (init === undefined) init = {};\n\n  let url;\n  if (isRequest(input)) url = (input as Request).url;\n  else {\n    url = input as string;\n    input = {} as Request;\n  }\n\n  let method = init.method || (input as Request).method || 'GET';\n  method = method.toUpperCase();\n  const lines = [`${method} ${url} HTTP/1.1`];\n\n  const headers = init.headers || (input as Request).headers;\n  if (headers !== undefined) {\n    /* c8 ignore start */\n    if (hasHeaders && headers instanceof Headers) {\n      for (const pair of (headers as Headers).entries()) lines.push(`${pair[0]}: ${pair[1]}`);\n    } else {\n      /* c8 ignore stop */\n      for (const key in headers as HeadersObject) lines.push(`${key}: ${headers[key]}`);\n    }\n  }\n\n  const body = init.body;\n  if (body !== undefined) {\n    if (~['GET', 'HEAD'].indexOf(method)) throw new Error(`Option body not valid with method ${method}`);\n    /* c8 ignore start */\n    if (hasBlob && body instanceof Blob) {\n      lines.push('');\n      lines.push(blobToString(body));\n    } else if (\n      /* c8 ignore stop */\n      typeof body === 'string' ||\n      body instanceof String ||\n      /* c8 ignore start */\n      (hasBuffer && body instanceof Buffer) ||\n      (hasURLSearchParams && body instanceof URLSearchParams)\n      /* c8 ignore stop */\n    ) {\n      lines.push('');\n      lines.push(body.toString());\n    } else throw new Error('Option body should be convertible to a string');\n  }\n  return lines.join('\\r\\n');\n}\n"],"names":["fetchHttpMessage","input","init","undefined","Error","url","isRequest","method","toUpperCase","lines","headers","hasHeaders","Headers","entries","pair","push","key","body","indexOf","hasBlob","Blob","blobToString","String","hasBuffer","Buffer","hasURLSearchParams","URLSearchParams","toString","join","object"],"mappings":"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"}