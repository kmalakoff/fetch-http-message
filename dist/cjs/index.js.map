{"version":3,"file":"index.js","sources":["../../src/blobToString.ts","../../src/index.ts"],"sourcesContent":["// https://stackoverflow.com/a/23024613/3150390\n/* c8 ignore start */\nexport default function blobToString(b: Blob): string {\n  const u = URL.createObjectURL(b);\n  const x = new XMLHttpRequest();\n  x.open(\"GET\", u, false);\n  x.send();\n  URL.revokeObjectURL(u);\n  return x.responseText;\n}\n/* c8 ignore stop */\n","import blobToString from \"./blobToString\";\n\nexport interface HeadersObject {\n  [key: string]: string;\n}\n\n// https://github.com/node-fetch/node-fetch/blob/main/%40types/index.d.ts\nexport type HeadersInit =\n  | Headers\n  | HeadersObject\n  | Record<string, string>\n  | Iterable<readonly [string, string]>\n  | Iterable<Iterable<string>>;\nconst hasHeaders = typeof Headers !== \"undefined\";\n\nexport type BodyInit = Blob | Buffer | URLSearchParams | string;\nconst hasBlob = typeof Blob !== \"undefined\";\nconst hasBuffer = typeof Buffer !== \"undefined\";\nconst hasURLSearchParams = typeof URLSearchParams !== \"undefined\";\n\n// export type RequestRedirect = 'error' | 'follow' | 'manual';\nexport interface RequestInit {\n  body?: BodyInit | null;\n  headers?: HeadersInit;\n  method?: string;\n  // redirect?: RequestRedirect;\n}\n\nexport type RequestInfo = string | Request;\nexport interface Request {\n  readonly headers: Headers | HeadersObject;\n  readonly method: string;\n  // readonly redirect: RequestRedirect;\n  readonly url: string;\n}\n\nfunction isRequest(object) {\n  return typeof object === \"object\";\n}\n\n/**\n * Generate an http message string using the fetch API\n *\n * @param input Fetch input\n * @param init Fetch init\n * @returns The http message string\n */\nexport default function fetchHttpMessage(input: RequestInfo, init?: RequestInit): string {\n  if (input === undefined) throw new Error(\"Input is expected\");\n  if (init === undefined) init = {};\n\n  let url;\n  if (isRequest(input)) url = new URL((input as Request).url);\n  else {\n    url = new URL(input as string);\n    input = {} as Request;\n  }\n\n  let method = init.method || (input as Request).method || \"GET\";\n  method = method.toUpperCase();\n  const lines = [`${method} ${url.toString()} HTTP/1.1`];\n\n  const headers = init.headers || (input as Request).headers;\n  if (headers !== undefined) {\n    /* c8 ignore start */\n    if (hasHeaders && headers instanceof Headers) {\n      for (const pair of (headers as Headers).entries()) lines.push(`${pair[0]}: ${pair[1]}`);\n    } else {\n      /* c8 ignore stop */\n      for (const key in headers as HeadersObject) lines.push(`${key}: ${headers[key]}`);\n    }\n  }\n\n  const body = init.body;\n  if (body !== undefined) {\n    if (~[\"GET\", \"HEAD\"].indexOf(method)) throw new Error(`Option body not valid with method ${method}`);\n    /* c8 ignore start */\n    if (hasBlob && body instanceof Blob) {\n      lines.push(\"\");\n      lines.push(blobToString(body));\n    } else if (\n      /* c8 ignore stop */\n      typeof body === \"string\" ||\n      body instanceof String ||\n      /* c8 ignore start */\n      (hasBuffer && body instanceof Buffer) ||\n      (hasURLSearchParams && body instanceof URLSearchParams)\n      /* c8 ignore stop */\n    ) {\n      lines.push(\"\");\n      lines.push(body.toString());\n    } else throw new Error(\"Option body should be convertible to a string\");\n  }\n  return lines.join(\"\\r\\n\");\n}\n"],"names":["blobToString","b","u","URL","createObjectURL","x","XMLHttpRequest","open","send","revokeObjectURL","responseText","hasHeaders","Headers","hasBlob","Blob","hasBuffer","Buffer","hasURLSearchParams","URLSearchParams","isRequest","object","fetchHttpMessage","input","init","undefined","Error","url","method","toUpperCase","lines","toString","headers","entries","pair","push","key","body","indexOf","String","join"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACe,SAASA,YAAT,CAAsBC,CAAtB,EAAuC;AACpD,MAAMC,CAAC,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,CAApB,CAAV;AACA,MAAMI,CAAC,GAAG,IAAIC,cAAJ,EAAV;AACAD,EAAAA,CAAC,CAACE,IAAF,CAAO,KAAP,EAAcL,CAAd,EAAiB,KAAjB;AACAG,EAAAA,CAAC,CAACG,IAAF;AACAL,EAAAA,GAAG,CAACM,eAAJ,CAAoBP,CAApB;AACA,SAAOG,CAAC,CAACK,YAAT;AACD;AACD;;ACGA,IAAMC,UAAU,GAAG,OAAOC,OAAP,KAAmB,WAAtC;AAGA,IAAMC,OAAO,GAAG,OAAOC,IAAP,KAAgB,WAAhC;AACA,IAAMC,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAApC;AACA,IAAMC,kBAAkB,GAAG,OAAOC,eAAP,KAA2B,WAAtD;;AAkBA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,SAAO,QAAOA,MAAP,MAAkB,QAAzB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,SAASC,gBAAT,CAA0BC,KAA1B,EAA8CC,IAA9C,EAA0E;AACvF,MAAID,KAAK,KAAKE,SAAd,EAAyB,MAAM,IAAIC,KAAJ,CAAU,mBAAV,CAAN;AACzB,MAAIF,IAAI,KAAKC,SAAb,EAAwBD,IAAI,GAAG,EAAP;AAExB,MAAIG,GAAJ;AACA,MAAIP,SAAS,CAACG,KAAD,CAAb,EAAsBI,GAAG,GAAG,IAAIvB,GAAJ,CAASmB,KAAD,CAAmBI,GAA3B,CAAN,CAAtB,KACK;AACHA,IAAAA,GAAG,GAAG,IAAIvB,GAAJ,CAAQmB,KAAR,CAAN;AACAA,IAAAA,KAAK,GAAG,EAAR;AACD;AAED,MAAIK,MAAM,GAAGJ,IAAI,CAACI,MAAL,IAAgBL,KAAD,CAAmBK,MAAlC,IAA4C,KAAzD;AACAA,EAAAA,MAAM,GAAGA,MAAM,CAACC,WAAP,EAAT;AACA,MAAMC,KAAK,GAAG,WAAIF,MAAJ,cAAcD,GAAG,CAACI,QAAJ,EAAd,eAAd;AAEA,MAAMC,OAAO,GAAGR,IAAI,CAACQ,OAAL,IAAiBT,KAAD,CAAmBS,OAAnD;;AACA,MAAIA,OAAO,KAAKP,SAAhB,EAA2B;AACzB;AACA,QAAIb,UAAU,IAAIoB,OAAO,YAAYnB,OAArC,EAA8C;AAAA,iDACxBmB,OAAD,CAAqBC,OAArB,EADyB;AAAA;;AAAA;AAC5C;AAAA,cAAWC,IAAX;AAAmDJ,UAAAA,KAAK,CAACK,IAAN,WAAcD,IAAI,CAAC,CAAD,CAAlB,eAA0BA,IAAI,CAAC,CAAD,CAA9B;AAAnD;AAD4C;AAAA;AAAA;AAAA;AAAA;AAE7C,KAFD,MAEO;AACL;AACA,WAAK,IAAME,IAAX,IAAkBJ,OAAlB;AAA4CF,QAAAA,KAAK,CAACK,IAAN,WAAcC,IAAd,eAAsBJ,OAAO,CAACI,IAAD,CAA7B;AAA5C;AACD;AACF;;AAED,MAAMC,IAAI,GAAGb,IAAI,CAACa,IAAlB;;AACA,MAAIA,IAAI,KAAKZ,SAAb,EAAwB;AACtB,QAAI,CAAC,CAAC,KAAD,EAAQ,MAAR,EAAgBa,OAAhB,CAAwBV,MAAxB,CAAL,EAAsC,MAAM,IAAIF,KAAJ,6CAA+CE,MAA/C,EAAN;AACtC;;AACA,QAAId,OAAO,IAAIuB,IAAI,YAAYtB,IAA/B,EAAqC;AACnCe,MAAAA,KAAK,CAACK,IAAN,CAAW,EAAX;AACAL,MAAAA,KAAK,CAACK,IAAN,CAAWlC,YAAY,CAACoC,IAAD,CAAvB;AACD,KAHD,MAGO;AACL;AACA,WAAOA,IAAP,KAAgB,QAAhB,IACAA,IAAI,YAAYE,MADhB;AAEA;AACCvB,IAAAA,SAAS,IAAIqB,IAAI,YAAYpB,MAH9B,IAICC,kBAAkB,IAAImB,IAAI,YAAYlB;AACvC;AAPK,MAQL;AACAW,MAAAA,KAAK,CAACK,IAAN,CAAW,EAAX;AACAL,MAAAA,KAAK,CAACK,IAAN,CAAWE,IAAI,CAACN,QAAL,EAAX;AACD,KAXM,MAWA,MAAM,IAAIL,KAAJ,CAAU,+CAAV,CAAN;AACR;;AACD,SAAOI,KAAK,CAACU,IAAN,CAAW,MAAX,CAAP;AACD;;;;"}